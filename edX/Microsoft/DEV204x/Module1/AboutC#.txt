About programming with C#

The C# programming langages was created from the ground up to be an object-oriented programming language
that offers ease to use, familiarity with C/C++ and Java developers, along with enhanced memory and resource 
management. C# is prevalent on the Microsoft platform but is also being used to develop software that runs on Linux, 
Android, and iOS devices as well. C# povides solid foundations on the art of object-oriented programming.

Contents:

* Basic C# data types
* Control structures in C#
* Object-oriented programming in C#
* Methods
* Complex data structures and generic collections
* Event handling
* LINQ (Language integrated query)
* Multitheading, and parallel programming
* Asynchronous programming

The C# programming language was borin in 1999 at Microsoft. Its original name was COOL for C-like object oriened
language but it was later changed to C#. It was created under the direction of Anders Hejlsberg to help adress
the shortcommings of other programming language in use at the time. The language is strongly typed, object oriented, 
and component oriented and utilizes a unified type system. Unlike C, C++, C# handles memory and computational 
resources for the developer, leading to the concept of managed code. C# uses garbage collection mechanism to release 
memory and resources that are not longer referenced in the application code, helping to prevent memory leak issues.

* Strongly typed: the language enforces type checking on objects on the code meaning it is type-safe
* Object-oriented: C# offers the developer all the tenets of OOP such as encapsulation, inheritance, adn polymorphism
* Component-oriented: C# allows the creation of software components for self-contained, self-describing packages
* Unified type system: all C# types, from primitive to reference types, inherit from a single root known as Object