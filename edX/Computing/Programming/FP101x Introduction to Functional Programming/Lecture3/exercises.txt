1. Consider a function safetail that behaves in the same way as tail, except that it should
   maps [] to []. Define it using:

   a. A conditional expression
   b. Guarded equations
   c. Pattern mathing

   Hint: The library function null :: [a] -> Bool can be used to test
   if a list is empty.

   a.
	   	safetail1 :: [a] -> [a] 
		safetail1 lst = 
			if null(lst) then [] 
			else drop 1 lst

	b. 
		safetail2 :: [a] -> [a]
		safetail2 lst
			| null lst	= []
			| otherwise = drop 1 lst

	c.
		safetail3 :: [a] -> [a]
		safetail3 []      = []
		safetail3 (x:xs) = xs

2. Give three possible definitions for the logical or operator (||)
   using pattern matching


		   	or1 :: Bool -> Bool -> Bool
			or1 True  True   = True
			or1 True  False  = True
			or1 False True   = True
			or1 False False  = False

			or2 :: Bool -> Bool -> Bool
			or2 True x  = True
			or2 False x = x

			or3 :: Bool -> Bool -> Bool
			or3 True x = True
			or3 x False = x

3. Redefine the following version of (&&) using conditionals

	True && True = True
	_    && _    = False

	and1 :: Bool -> Bool -> Bool
	and1 a b =
		if a then b
		else False
